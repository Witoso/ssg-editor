---
import fs from "fs/promises";
import path from "path";

// Utility function to check if a file exists
async function fileExists(filePath: string): Promise<boolean> {
  try {
    await fs.stat(filePath);
    return true; // File exists
  } catch {
    return false; // File does not exist
  }
}

if (Astro.request.method === "POST") {
  const rootPath = process.cwd(); // Get the root path of the Astro project
  const demoFolderPath = path.join(rootPath, "demo/");

  // Capture the referrer (the URL of the page the user came from)
  const referrer = Astro.request.headers.get("referer") || "/"; // Default to "/" if no referrer
  const referrerUrl = new URL(referrer); // Parse the referrer as a URL object

  try {
    const data = await Astro.request.formData();
    const newFilename = data.get("filename");
    const folderPath = data.get("folder-path");

    if (
      typeof newFilename !== "string" ||
      newFilename.length < 1 ||
      typeof folderPath !== "string"
    ) {
      // Append the error to the referrer URL
      referrerUrl.searchParams.set("error", "invalid_input");
      return Astro.redirect(referrerUrl.toString());
    }

    // Construct the full file path
    const filePath = path.join(demoFolderPath, folderPath, `${newFilename}.md`);

    // Check if the file already exists
    if (await fileExists(filePath)) {
      // Append the error to the referrer URL
      referrerUrl.searchParams.set("error", "file_exists");
      referrerUrl.searchParams.set("filename", newFilename);
      return Astro.redirect(referrerUrl.toString());
    }

    // Ensure the directory exists
    await fs.mkdir(path.join(demoFolderPath, folderPath), { recursive: true });

    // Create the file (empty for now)
    await fs.writeFile(filePath, "", "utf-8");

    // Append the success to the referrer URL
    referrerUrl.searchParams.set("success", "file_created");
    referrerUrl.searchParams.set("filename", newFilename);
    return Astro.redirect(referrerUrl.toString());
  } catch (error) {
    if (error instanceof Error) {
      console.error("Error creating file:", error.message);
    }
    // Append the server error to the referrer URL
    referrerUrl.searchParams.set("error", "server_error");
    return Astro.redirect(referrerUrl.toString());
  }
}
---
